
//    private final Handler handler = new Handler();
//    private final MyListener myListener = new MyListener() {
//        @Override
//        public void onRecieve(final String topic, final String msg) {
//            handler.post(() -> {  handler.post(() -> Log.v("MQTTService", topic+" "+msg));});
//        }
//
//        @Override
//        public void log(final String message) {
//            handler.post(() -> Log.v("MQTTService", message));
//        }
//    };


//    @Override
//    protected void onCreate(Bundle savedInstanceState) {
//        Log.v(TAG, "onCreate");
//        super.onCreate(savedInstanceState);
//        mqttServiceBound = false;
//        //onStartMqttService();
//    }

//
//    @Override
//    protected void onResume() {
//        Log.v(TAG, "onResume");
//        super.onResume();
//        bindMQTTService();
//    }
//
//    @Override
//    protected void onPause() {
//        Log.v(TAG, "onPause");
//        super.onPause();
//        unbindMQTTService();
//    }
//
//
//    @Override
//    protected void onDestroy() {
//        Log.v(TAG, "onDestroy");
//        //onStopMqttService();
//        super.onDestroy();
//    }
//
//
//
//    private boolean mqttServiceBound;
//    private MQTTService mqttService;
//
//    private void bindMQTTService() {
//        Log.v(TAG, "bindMQTTService");
//        Intent intent = new Intent(this, MQTTService.class);
//        intent.setAction(MQTTService.ACTION_PRESS);
//        mqttServiceBound = bindService(intent, serviceConnection, Context.BIND_AUTO_CREATE);
//        if (!mqttServiceBound) {
//            Log.w(TAG, "could not try to bind service, will not be bound");
//        }
//    }
//
//    private void unbindMQTTService() {
//        Log.v(TAG, "unbindMQTTService");
//        if (mqttServiceBound) {
//            if (mqttService != null) {
//                // deregister listeners, if there are any
//            }
//            mqttServiceBound = false;
//            unbindService(serviceConnection);
//        }
//    }
//
//    private final ServiceConnection serviceConnection = new ServiceConnection() {
//        @Override
//        public void onServiceConnected(ComponentName name, IBinder service) {
//            Log.v(TAG, "onServiceConnected");
//            mqttService = ((MQTTService.LocalBinder) service).getMQTTService();
//            mqttService.registerPressListener(myListener);
//        }
//
//        @Override
//        public void onServiceDisconnected(ComponentName name) {
//            // unintentionally disconnected
//            Log.v(TAG, "onServiceDisconnected");
//            unbindMQTTService(); // cleanup
//        }
//    };
//
//    public void onStartMqttService() {
//        Log.v(TAG, "onStartService");
//        Intent intent = new Intent(this, MQTTService.class);
//        intent.setAction(MQTTService.ACTION_START);
//        startService(intent);
//    }
//
//    public void onStopMqttService() {
//        Log.v(TAG, "onStopService");
//        Intent intent = new Intent(this, MQTTService.class);
//        intent.setAction(MQTTService.ACTION_STOP);
//        startService(intent); // to stop
//    }

