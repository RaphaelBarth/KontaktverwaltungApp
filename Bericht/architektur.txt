Allgemeiner Aufbau der App:
Im Wesentlichen besteht der Aufbau der App aus den Bereichen Activites, RoomLifeCycleService, MQTT-Service, SQL-Lite Datenbank sowie Preferences. Sämtliche benötigten Informationen über den Nutzer der App werden mittels Preferences erfasst. Ohne das vollständige Ausfüllen der Preferences ist ein Verwenden der App nicht möglich. Um später einen eleganten Zugriff auf die Preferences zu erhalten ist eine MySelf Klasse implementiert. In den Activitys werden den verwendeten Widgets ihre Funktionen zugewiesen und bilden somit das Userinterface. 
Für den Datenaustausch zwischen Host und Teilnehmer kommt der MQTT-Service zum Einsatz. 
Verändert sich der Status eines Events oder eines Teilnehmers, werden über den MQTT-Service die Datenbanken der anderen Teilnehmer/Host aktualisiert. Hierbei übernimmt die Datenbank die Spei-cherung von Nutzerdaten und von den Veranstaltungsinformationen. 
Die Teilnahme einer Veranstaltung kann per NFC-Tag oder das Abscannen eines QR-Codes erfolgen. Wird ein Room-Tag erkannt, werden die hinterlegten Daten aus der Klasse MySelf gelesen über den MQTT-Service an die Datenbank des Host übermittelt. Genauere Informationen über den Room-Tag sind in Abschnitt LifeCycleService zu finden.
Veranstaltungen werden durch den RoomLifeCycleService überwacht. Der RoomLifeCycleService ent-hält einen Timer welcher den Lebenszyklus eines Events steuert. Ändert sich der Lebenszyklus des Events, wird die Datenbank aktualisiert und die entsprechenden Teilnehmer über den MQTT-Service benachrichtigt. Die genaueren Funktionsweisen des LifeCycleService, MQTT-Server und SQL-Lite Da-tenbank werden in den folgenden Kapiteln erläutert.
